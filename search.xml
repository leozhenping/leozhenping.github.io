<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Docker registry删除镜像方法]]></title>
    <url>%2F2018%2F09%2F20%2Fdocker%2F</url>
    <content type="text"><![CDATA[registry删除镜像方法docker-distribution主配置文件:123456789101112131415161718192021config.yml: version: 0.1 log: fields: service: registry storage: delete: enabled: true #需要开启存储删除功能，才能使用接口删除镜像。 cache: blobdescriptor: inmemory filesystem: rootdirectory: /var/lib/registry http: addr: :5000 headers: X-Content-Type-Options: [nosniff] health: storagedriver: enabled: true interval: 10s threshold: 3 删除Image的步骤 1、获取Etag字段中的sha256的字段 12345678910curl -i -X GET --header &quot;Accept: application/vnd.docker.distribution.manifest.v2+json&quot; http://localhost:5000/v2/镜像名称/manifests/标签 HTTP/1.1 200 OK Content-Length: 3047 Content-Type: application/vnd.docker.distribution.manifest.v2+json Docker-Content-Digest: sha256:4111f52442b430fa1c758156cb20dd7884dbde3fcbc969f166850d9f6da06035 Docker-Distribution-Api-Version: registry/2.0 Etag: &quot;sha256:4111f52442b430fa1c758156cb20dd7884dbde3fcbc969f166850d9f6da06035&quot; #获取Etag字段的VaLue,sha256:xxx字段。 X-Content-Type-Options: nosniff Date: Wed, 11 Apr 2018 05:51:24 GMT 2、根据Etag字段来删除标签 123456789101112131415161718curl -k -v -s -X DELETE http://localhost:5000/v2/tomcat/manifests/ETAG * About to connect() to localhost port 5000 (#0) * Trying 127.0.0.1... * Connected to localhost (127.0.0.1) port 5000 (#0) &gt; DELETE /v2/tomcat/manifests/sha256:4111f52442b430fa1c758156cb20dd7884dbde3fcbc969f166850d9f6da06035 HTTP/1.1 &gt; User-Agent: curl/7.29.0 &gt; Host: localhost:5000 &gt; Accept: */* &gt; &lt; HTTP/1.1 202 Accepted #返回202 Accepted内容，即表示删除成功 &lt; Docker-Distribution-Api-Version: registry/2.0 &lt; X-Content-Type-Options: nosniff &lt; Date: Wed, 11 Apr 2018 05:56:21 GMT &lt; Content-Length: 0 &lt; Content-Type: text/plain; charset=utf-8 &lt; * Connection #0 to host localhost left intact 3、获取标签，以确认删除标签成功 12curl -X GET http://localhost:5000/v2/tomcat/tags/list &#123;&quot;name&quot;:&quot;ubuntu&quot;,&quot;tags&quot;:null&#125; 4、释放磁盘空间 12345678910registry garbage-collect /etc/docker-distribution/registry/config.yml 10 blobs marked, 15 blobs eligible for deletion #返回10个blobs被标记，15个适合删除的块。 blob eligible for deletion: sha256:68fb305098765361009a270c1e5293e3972d008761ee30260e8797adf950a830 INFO[0000] Deleting blob: /docker/registry/v2/blobs/sha256/68/68fb305098765361009a270c1e5293e3972d008761ee30260e8797adf950a830 go.version=go1.8.3 instance.id=ffccf012-55fc-440d-8820-9f8c7393ad09 #INFO信息中，返回的是: 块所对应的文件路径 blob eligible for deletion: sha256:96e1d8c6601afdc4b27ce3e6bb9c9460e788cb5f66a6cc71255e88a004071ecd INFO[0000] Deleting blob: /docker/registry/v2/blobs/sha256/96/96e1d8c6601afdc4b27ce3e6bb9c9460e788cb5f66a6cc71255e88a004071ecd go.version=go1.8.3 instance.id=ffccf012-55fc-440d-8820-9f8c7393ad09 blob eligible for deletion: sha256:0b54f3727113712ee413d614a38f2a7e25c568d7c951c56487a90d4434426646curl -X GET http://localhost:5000/v2/_catalog : 获取镜像的名称列表当删除镜像后，需要重新上传时，遇到错误: Layer already exists, 需要重启docker-distribution服务即可。]]></content>
      <categories>
        <category>Docker</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[kubernetes]]></title>
    <url>%2F2018%2F09%2F19%2Fkubernetes%2F</url>
    <content type="text"></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
  </entry>
</search>
